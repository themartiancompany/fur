#!/usr/bin/env bash
#
# SPDX-License-Identifier: AGPL-3.0

_bin="$( \
  dirname \
    "$( \
      command \
        -v \
	  "env")")"
_lib="${_bin}/../lib"
_share="${_bin}/../share"
source \
  "${_lib}/libcrash-bash/crash-bash"

# Check all required programs
# are available
_requirements() {
  _check_cmd \
    'git'
}

# shellcheck disable=SC2034
_global_variables() {
  installed_packages=()
  color=""
  quiet=""
}


# $@: packages
_fur() {
  local \
    _packages=() \
    _pkgs=() \
    _pacman_opts=() \
    _git_opts=() \
    _http \
    _ns \
    _pkg \
    _url
  _url="${_http}/${_ns}/fur"
  _packages=(
    "$@"
  )
  _msg_info \
    "installing ${_packages[*]}"
  _pacman_opts+=(
    "-U"
  )
  _git_opts=(
    --single-branch
    --depth=1
  )
  for _pkg \
    in "${_packages[@]}"; do
    cd \
      "${_repo}"
    _opts=(
      "${_git_opts[@]}"
      --branch="${_pkg}"
    )
    _repo="$( \
      mktemp \
        -d)"
    cd \
      "${_repo}"
    git \
      clone \
        "${_opts[@]}" \
        "${_url}"
    _pkgs=(
      "fur/"*"/"*".pkg."*
      )
    pacman \
      "${_pacman_opts[@]}" \
      "${_pkgs[@]}"
  done
  cd \
    "${OLDPWD}"
}

# Set defaults and, if present, overrides
# from arch-grub command line option parameters
_set_overrides() {
  if [[ -v override_color ]]; then
    color="${override_color}"
  elif [[ -z "${color}" ]]; then
    color="n"
  fi
  if [[ -v override_quiet ]]; then
    quiet="${override_quiet}"
  elif [[ -z "${quiet}" ]]; then
    quiet="y"
  fi
}

# Show help usage, with an exit status.
# $1: exit status number.
_usage() {
  local \
    _usage_text
  IFS='' \
    read \
      -r \
      -d '' \
      _usage_text << \
        ENDUSAGETEXT || true

Usage:
  $(_get "app" "name")
    [options]
    [packages]
  options:
     -c                   Colors.
     -h                   This message.
     -v                   Enable verbose output
ENDUSAGETEXT
  _printf \
    '%s\n' \
    "${_usage_text}"
  exit \
    "${1}"
}

_globals
_global_variables
_requirements
# shellcheck disable=SC2004
# shellcheck disable=SC2034
while \
  getopts \
    'cvh?' \
    arg; do
  case \
    "${arg}" in
    c) override_color="y" ;;
    v) override_quiet="n" ;;
    h|?) _set_overrides && \
	 _usage \
           0 ;;
    *)
    _msg_error \
      "Invalid argument '${arg}'" \
      0 && \
    _set_overrides && \
    _usage \
      1
    ;;
  esac
done
shift \
  $(( \
    OPTIND - 1 \
  ))

(( $# < 1 )) && \
  _usage \
    1
 
installed_packages=(
  $@
)
_config_user_init \
  "fur"
_fur \
  ${installed_packages[@]}"
